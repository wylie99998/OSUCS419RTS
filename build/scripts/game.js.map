{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/levels/NorthKingdom.js",
    "src/prefabs/NPC01.js",
    "src/prefabs/Player.js",
    "src/states/Boot.js",
    "src/states/Preload.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Boot from 'states/Boot';\nimport Preload from 'states/Preload';\nimport NorthKingdom from 'levels/NorthKingdom';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(960, 640, Phaser.AUTO, 'content', null);\n\t\tthis.state.add('Boot', Boot, false);\n\t\tthis.state.add('Preload', Preload, false);\n\t\tthis.state.add('NorthKingdom', NorthKingdom, false);\n\t\tthis.state.start('Boot');\n\t}\n}\n\nnew Game();\n",
    "import Player from 'prefabs/Player';\nimport NPC01 from 'prefabs/NPC01';\n\nexport default class GameState extends Phaser.State {\n\tpreload() {\n\t\tthis.load.spritesheet('npc01', \"assets/spritesheets/npc01.png\", 64, 64, 178);\n\t\tthis.load.text('dialogue', 'assets/dialogue/NPC01.json')\n\n\t}\n\tcreate() {\n        // add map\n\t\tthis.map = this.add.tilemap('north_kingdom');\n\t\tthis.map.addTilesetImage('Tiny16', 'tiles');\n\n\t\t// add layers from map\n\t\tthis.backgroundLayer = this.map.createLayer('backgroundLayer');\n        this.backgroundLayer.scale.setTo(3.5, 3.5);\n        this.backgroundLayer.resizeWorld();\n\t\tthis.backgroundLayer.smoothed = false;\n\n        this.blockedLayer = this.map.createLayer('blockedLayer');\n\t\tthis.map.setCollisionBetween(1, 256, true, 'blockedLayer');\n\t\tthis.blockedLayer.setScale(3.5, 3.5);\n        this.blockedLayer.resizeWorld();\n        this.blockedLayer.smoothed = false;\n\n        this.borderLayer = this.map.createLayer('borderLayer');\n        this.borderLayer.scale.setTo(3.5, 3.5);\n        this.borderLayer.resizeWorld();\n        this.borderLayer.smoothed = false;\n\n        // add player\n\t\tthis.player = new Player(this.game);\n\t\tthis.add.existing(this.player);\n\t\tthis.player.position.x = 1400;\n\t\tthis.player.position.y = 1400;\n\n\t\t// add npc\n\t\tthis.npc01 = new NPC01(this.game);\n\t\tthis.add.existing(this.npc01);\n\t}\n    update() {\n        this.game.physics.arcade.collide(this.player, this.blockedLayer);\n    }\n}\n\nexport default GameState;\n",
    "export default class NPC01 extends Phaser.Sprite {\n    constructor(game) {\n        super(game, 1400, 500, 'npc01', 26);\n\n        // enable interaction with player\n        this.scale.setTo(1.1);\n        this.inputEnabled = true;\n        this.events.onInputDown.add(this.startConversation, this);\n    }\n    startConversation() {\n        this.game.dialogue = JSON.parse(this.game.cache.getText('dialogue'));\n        this.id = this.game.dialogue.start;\n        this.start = this.game.dialogue['elements'][this.id];\n        this.style = {font: \"22px Arial\", fill: \"white\", align: \"center\", backgroundColor: \"000\"};\n        //this.game.add.text(this.game.world.centerX+350, 500, this.start.npc, this.style);\n        this.character = this.game.dialogue.name;\n        this.updateConversation(this.start, this.character);\n    }\n    updateConversation(id, character) {\n        if (character == \"NPC01\") {\n            character = \"\";\n            this.message = id.npc;\n            this.showConversation(id.player[\"1424791491948\"], this.message);\n        } else {\n            character = this.game.dialogue.name;\n            this.message = id.text;\n            id = this.game.dialogue['elements']['1424791562420'];\n            this.showConversation(id, this.message);\n        }\n    }\n    showConversation(id, message) {\n        this.game.add.text(this.game.world.centerX+350, 500, message, this.style);\n        this.style = {font: \"22px Arial\", fill: \"white\", align: \"center\", backgroundColor: \"000\"};\n        this.updateConversation(id)\n    }\n}\n",
    "export default class Player extends Phaser.Sprite {\n    constructor(game) {\n        super(game, 0, 0, 'hero');\n\n        // enable physics for the player\n        this.game.physics.arcade.enableBody(this);\n        this.scale.setTo(1.1);\n        this.body.collideWorldBounds = true;\n        this.game.physics.arcade.enable(this);\n\n        // camera follows player\n        this.game.camera.follow(this);\n\n        // walking animations for the player\n        this.animations.add(\"walk-left\", [117, 118, 119, 120, 121, 122, 123, 124, 125], 8, true);\n        this.animations.add(\"walk-right\", [143, 144, 145, 146, 147, 148, 149, 150, 151], 8, true);\n        this.animations.add(\"walk-up\", [104, 105, 106, 107, 108, 109, 110, 111, 112], 8, true);\n        this.animations.add(\"walk-down\", [130, 131, 132, 133, 134, 135, 136, 137, 138,], 8, true);\n\n        // create control inputs for player\n        this.cursors = this.game.input.keyboard.createCursorKeys();\n    }\n    update() {\n        this.body.velocity.x = 0;\n        this.body.velocity.y = 0;\n\n        // player moves in specified direction or stands still\n        if (this.cursors.left.isDown) {\n            this.animations.play(\"walk-left\");\n            this.body.velocity.x =- 180;\n        } else if (this.cursors.right.isDown) {\n            this.animations.play(\"walk-right\");\n            this.body.velocity.x =+ 180;\n        } else {\n            this.body.velocity.x = 0;\n        }\n        if (this.cursors.up.isDown) {\n            this.animations.play(\"walk-up\");\n            this.body.velocity.y =- 180;\n        } else if (this.cursors.down.isDown) {\n            this.animations.play(\"walk-down\");\n            this.body.velocity.y =+ 180;\n        } else {\n            this.body.velocity.y = 0;\n        }\n        if (this.body.velocity.x === 0 && this.body.velocity.y === 0) {\n            this.animations.stop();\n        }\n    }\n}\n",
    "export default class Boot extends Phaser.State {\n\tpreload() {\n\t\tthis.load.image('splash', 'assets/images/splash.jpg');\n\t}\n\tcreate() {\n\t\tthis.physics.startSystem(Phaser.Physics.ARCADE);\n\t\tthis.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n\t\tthis.game.state.start('Preload');\n\t}\n}\n",
    "export default class Preload extends Phaser.State {\n    preload() {\n        this.load.tilemap('north_kingdom', 'assets/tilemaps/north_kingdom.json', null, Phaser.Tilemap.TILED_JSON);\n        this.load.image('tiles', 'assets/spritesheets/Tiny16.png');\n        this.load.spritesheet('hero', \"assets/spritesheets/hero.png\", 64, 64, 178);\n    }\n    create() {\n        this.image = this.add.sprite(0, 0, 'splash');\n        this.image.scale.setTo(0.9, 0.63);\n        this.image.inputEnabled = true;\n        this.image.events.onInputDown.add(this.startGame, this);\n    }\n    startGame() {\n        this.state.start('NorthKingdom');\n    }\n}\n"
  ]
}