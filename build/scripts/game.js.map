{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/levels/NorthKingdom.js",
    "src/prefabs/NPC01.js",
    "src/prefabs/Player.js",
    "src/prefabs/PlayerUnit.js",
    "src/states/Battle.js",
    "src/states/Boot.js",
    "src/states/Preload.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Boot from 'states/Boot';\nimport Preload from 'states/Preload';\nimport Battle from 'states/Battle';\nimport NorthKingdom from 'levels/NorthKingdom';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(960, 640, Phaser.AUTO, 'content', null);\n\t\tthis.state.add('Boot', Boot, false);\n\t\tthis.state.add('Preload', Preload, false);\n\t\tthis.state.add('Battle', Battle, false);\n\t\tthis.state.add('NorthKingdom', NorthKingdom, false);\n\t\tthis.state.start('Boot');\n\t}\n}\n\nnew Game();\n",
    "import Player from 'prefabs/Player';\nimport NPC01 from 'prefabs/NPC01';\n\nexport default class NorthKingdom extends Phaser.State {\n\tpreload() {\n\t\tthis.load.spritesheet('npc01', \"assets/spritesheets/npc01.png\", 64, 64, 178);\n\t\tthis.load.text('dialogue', 'assets/dialogue/NPC01.json');\n\t\tthis.load.text('characters', 'assets/characters.json');\n\t}\n\tcreate() {\n        // add map\n\t\tthis.map = this.add.tilemap('north_kingdom');\n\t\tthis.map.addTilesetImage('Tiny16', 'tiles');\n\n\t\t// add layers from map\n\t\tthis.backgroundLayer = this.map.createLayer('backgroundLayer');\n        this.backgroundLayer.scale.setTo(3.5, 3.5);\n        this.backgroundLayer.resizeWorld();\n\t\tthis.backgroundLayer.smoothed = false;\n\n        this.blockedLayer = this.map.createLayer('blockedLayer');\n\t\tthis.map.setCollisionBetween(1, 256, true, 'blockedLayer');\n\t\tthis.blockedLayer.setScale(3.5, 3.5);\n        this.blockedLayer.resizeWorld();\n        this.blockedLayer.smoothed = false;\n\n        this.borderLayer = this.map.createLayer('borderLayer');\n        this.borderLayer.scale.setTo(3.5, 3.5);\n        this.borderLayer.resizeWorld();\n        this.borderLayer.smoothed = false;\n\n        // add player\n\t\tthis.player = new Player(this.game);\n\t\tthis.add.existing(this.player);\n\t\tthis.player.position.x = 1400;\n\t\tthis.player.position.y = 600; // reset back to 1400\n\n\t\t// add npc\n\t\tthis.npc01 = new NPC01(this.game);\n\t\tthis.add.existing(this.npc01);\n\t}\n    update() {\n        this.game.physics.arcade.collide(this.player, this.blockedLayer);\n    }\n}\n",
    "export default class NPC01 extends Phaser.Sprite {\n    constructor(game) {\n        super(game, 1400, 500, 'npc01', 26);\n\n        // enable interaction with player\n        this.scale.setTo(1.1);\n        this.inputEnabled = true;\n        this.events.onInputDown.add(this.startDialogue, this);\n        //this.events.onInputDown.add(this.assignParty, this);\n    }\n    /*assignParty() {\n        this.party = [\n            { name: 'sara' },\n            { name: 'ultimate_defender'}\n        ]\n        this.startBattle(this.party)\n    }\n    startBattle(party) {\n        this.game.dialogue = JSON.parse(this.game.cache.getText('dialogue'));\n        this.game.state.start('Battle', true, false, party)\n    }*/\n    startDialogue() {\n        this.game.dialogue = JSON.parse(this.game.cache.getText('dialogue'));\n        this.id = this.game.dialogue.start;\n        this.question = this.game.dialogue['elements'][this.id];\n        this.style = {font: \"22px Arial\", fill: \"white\", align: \"center\", backgroundColor: \"000\"};\n        this.game.add.text(this.game.world.centerX+20, 350, this.question.npc, this.style);\n        this.showDialogue(this.game.dialogue, this.question)\n    }\n    showDialogue(dialogue, message) {\n        this.style = {font: \"22px Arial\", fill: \"white\", align: \"center\", backgroundColor: \"000\"};\n        // use a for loop to iterate through all answers.\n        for (var i in dialogue['elements'][this.game.dialogue.start].character) {\n            console.log(dialogue['elements'][this.game.dialogue.start].character[i]);\n        }\n        /*this.answer1 = this.game.add.text(this.game.world.centerX+20, 420, this.message.character.a, this.style);\n        this.answer1.inputEnabled = true;\n        this.answer1.events.onInputDown.add(this.actionOnClick, this);\n\n        this.answer2 = this.game.add.text(this.game.world.centerX+20, 480, this.message.character.b, this.style);\n        this.answer2.inputEnabled = true;\n\n        this.answer3 = this.game.add.text(this.game.world.centerX+20, 540, this.message.character.c, this.style);\n        this.answer3.inputEnabled = true;\n\n        this.answer4 = this.game.add.text(this.game.world.centerX+20, 600, this.message.character.d, this.style);\n        this.answer4.inputEnabled = true;*/\n\n        this.updateDialogue(dialogue);\n    }\n    updateDialogue(dialogue) {\n\n    }\n\n    actionOnClick() {\n        console.log('clicked')\n    }\n\n    /*startConversation() {\n        this.game.dialogue = JSON.parse(this.game.cache.getText('dialogue'));\n        this.id = this.game.dialogue.start;\n        this.convo = this.game.dialogue['elements'][this.id];\n        this.style = {font: \"22px Arial\", fill: \"white\", align: \"center\", backgroundColor: \"000\"};\n        this.game.add.text(this.game.world.centerX+350, 500, this.convo.npc, this.style);\n        this.character = \"\";\n        this.updateConversation(this.convo.player, this.character);\n    }\n    updateConversation(convo, character) {\n        if (character == \"NPC01\") {\n            character = \"\";\n            this.message = convo.npc;\n            this.showConversation(convo.player[\"1424791491948\"], this.message, character);\n        } else {\n            character = this.game.dialogue.name;\n            convo = this.game.dialogue['elements']['convo'];\n            this.showConversation(convo, this.message, character);\n        }\n    }\n    showConversation(convo, message, character) {\n        this.game.add.text(this.game.world.centerX+350, 500, message, this.style);\n        this.style = {font: \"22px Arial\", fill: \"white\", align: \"center\", backgroundColor: \"000\"};\n        if (character == \"NPC01\") {\n            this.updateConversation(convo, character)\n        } else {\n            this.updateConversation(convo['followup'], character);\n        }\n    }*/\n}\n",
    "export default class Player extends Phaser.Sprite {\n    constructor(game) {\n        super(game, 0, 0, 'hero');\n\n        // enable physics for the player\n        this.game.physics.arcade.enableBody(this);\n        this.scale.setTo(1.1);\n        this.body.collideWorldBounds = true;\n        this.game.physics.arcade.enable(this);\n\n        // camera follows player\n        this.game.camera.follow(this);\n\n        // walking animations for the player\n        this.animations.add(\"walk-left\", [117, 118, 119, 120, 121, 122, 123, 124, 125], 8, true);\n        this.animations.add(\"walk-right\", [143, 144, 145, 146, 147, 148, 149, 150, 151], 8, true);\n        this.animations.add(\"walk-up\", [104, 105, 106, 107, 108, 109, 110, 111, 112], 8, true);\n        this.animations.add(\"walk-down\", [130, 131, 132, 133, 134, 135, 136, 137, 138,], 8, true);\n\n        // create control inputs for player\n        this.cursors = this.game.input.keyboard.createCursorKeys();\n    }\n    update() {\n        this.body.velocity.x = 0;\n        this.body.velocity.y = 0;\n\n        // player moves in specified direction or stands still\n        if (this.cursors.left.isDown) {\n            this.animations.play(\"walk-left\");\n            this.body.velocity.x =- 180;\n        } else if (this.cursors.right.isDown) {\n            this.animations.play(\"walk-right\");\n            this.body.velocity.x =+ 180;\n        } else {\n            this.body.velocity.x = 0;\n        }\n        if (this.cursors.up.isDown) {\n            this.animations.play(\"walk-up\");\n            this.body.velocity.y =- 180;\n        } else if (this.cursors.down.isDown) {\n            this.animations.play(\"walk-down\");\n            this.body.velocity.y =+ 180;\n        } else {\n            this.body.velocity.y = 0;\n        }\n        if (this.body.velocity.x === 0 && this.body.velocity.y === 0) {\n            this.animations.stop();\n        }\n    }\n}\n",
    "export default class PlayerUnit extends Phaser.Sprite {\n    constructor(game, x, y, asset) {\n        super(game, x, y, asset, 0);\n        this.scale.setTo(1.2);\n        this.smoothed = false;\n        this.inputEnabled = true;\n\n        this.animations.add(\"attack\", [0, 1, 2, 3, 4, 5, 0], 8, false);\n        this.animations.play(\"attack\");\n\n        this.hitpoints = 400;\n        this.defense = 50;\n        this.attack = 10;\n    }\n}\n",
    "import PlayerUnit from 'prefabs/PlayerUnit';\n\nexport default class Battle extends Phaser.State {\n    init(party) {\n        this.game.party = party;\n    }\n    preload() {\n        var assets = this.game.party;\n        var assets_data = JSON.parse(this.cache.getText('characters'));\n        // load characters in party\n        for (var character in assets) {\n            //console.log(assets_data.assets[assets[character].name]);\n            this.load.spritesheet(\n                assets[character].name,\n                assets_data.assets[assets[character].name].source,\n                assets_data.assets[assets[character].name].width,\n                assets_data.assets[assets[character].name].height, 12\n            );\n        }\n    }\n    create() {\n        // create the map\n        this.map = this.add.tilemap('battle');\n        this.map.addTilesetImage('Tiny16', 'tiles');\n        this.backgroundLayer = this.map.createLayer('backgroundLayer');\n\n        // create characters in party\n        var assets = this.game.party\n        var assets_data = JSON.parse(this.cache.getText('characters'));\n        var prefabs = [];\n        for (var character in assets) {\n            this.character = new PlayerUnit(\n                this.game,\n                assets_data.prefabs[assets[character].name].position.x,\n                assets_data.prefabs[assets[character].name].position.y,\n                assets[character].name);\n            prefabs.push(this.character)\n            this.add.existing(this.character);\n        }\n        delete(this.character);\n        //this.whoseTurn = this.sara.name;\n\n        //this.ultimate_defender.events.onInputDown.add(this.effect, this);\n    }\n    update() {\n\n    }\n    effect() {\n        console.log('hit')\n    }\n}\n",
    "export default class Boot extends Phaser.State {\n\tpreload() {\n\t\tthis.load.image('splash', 'assets/images/splash.jpg');\n\t}\n\tcreate() {\n\t\tthis.physics.startSystem(Phaser.Physics.ARCADE);\n\t\tthis.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n\t\tthis.game.state.start('Preload');\n\t}\n}\n",
    "export default class Preload extends Phaser.State {\n    preload() {\n        this.load.tilemap('north_kingdom', 'assets/tilemaps/north_kingdom.json', null, Phaser.Tilemap.TILED_JSON);\n        this.load.tilemap('battle', 'assets/tilemaps/battle.json', null, Phaser.Tilemap.TILED_JSON);\n        this.load.image('tiles', 'assets/spritesheets/Tiny16.png');\n        this.load.spritesheet('hero', \"assets/spritesheets/hero.png\", 64, 64, 178);\n    }\n    create() {\n        this.image = this.add.sprite(0, 0, 'splash');\n        this.image.scale.setTo(0.9, 0.63);\n        this.image.inputEnabled = true;\n        this.image.events.onInputDown.add(this.startGame, this);\n    }\n    startGame() {\n        this.state.start('NorthKingdom');\n    }\n}\n"
  ]
}